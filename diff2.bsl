Процедура сп_ПКО_ПТиУ_ПоступлениеТоваровУслуг_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	ДобавитьПризнакЭтоНовый(ПолученныеДанные, ДанныеИБ);

	ЗапомнитьПрефиксДокумента(ПолученныеДанные, КомпонентыОбмена);
	ЗаполнитьКурсИКратностьВзаиморасчетов(ПолученныеДанные);

	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.СпособЗачетаАвансов) Тогда
		ПолученныеДанные.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
	КонецЕсли;

	// Склад
	ПолученныеДанные.Склад = СкладДляЗагрузки(ПолученныеДанные.Склад, КомпонентыОбмена.ПараметрыКонвертации);

	УстановитьПризнакПроведенПриЗагрузке(ПолученныеДанные, ДанныеИБ, КомпонентыОбмена.ПараметрыКонвертации);

	ЗагрузитьДополнительныеСведения(?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка), 
	ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);

	Если ПолученныеДанные.ДополнительныеСвойства.Свойство("НДСИсчисляетсяПокупателем")
		И ЗначениеЗаполнено(ПолученныеДанные.ДоговорКонтрагента) Тогда
		КомпонентыОбмена.ПараметрыКонвертации.ДоговорыПокупкиНДСИсчисляетсяПокупателем.Добавить(ПолученныеДанные.ДоговорКонтрагента);

		ЗаполнитьСуммуНДСВТоварахПриНДСУПокупателя(ПолученныеДанные);

	КонецЕсли;

	Если Справочники.Контрагенты.КонтрагентРезидентТаможенногоСоюза(ПолученныеДанные.Контрагент) Тогда
		УстановитьСтавкуНДСПодходящуюДляЕАЭС(ПолученныеДанные);
	КонецЕсли;

	Если ПолученныеДанные.ДополнительныеСвойства.Свойство("ЭлектронныеУслуги")
		И ЗначениеЗаполнено(ПолученныеДанные.ДоговорКонтрагента) Тогда
		КомпонентыОбмена.ПараметрыКонвертации.ДоговорыПокупкиЭлектронныхУслуг.Добавить(ПолученныеДанные.ДоговорКонтрагента);
	КонецЕсли;

	#Область Мержевание
	Если ДанныеИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;

	// Если в уже существующем документе указан договор факторинга, то загружать такой документ повторно не требуется.
	Если ЗначениеЗаполнено(ДанныеИБ.ДоговорКонтрагента) Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДоговорКонтрагента, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СФакторинговойКомпанией Тогда
			ПолученныеДанные = Неопределено;
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// Склад
	Если Не ЗначениеЗаполнено(ПолученныеДанные.Склад) И ЗначениеЗаполнено(ДанныеИБ.Склад) Тогда
		ПолученныеДанные.Склад = ДанныеИБ.Склад;
	КонецЕсли;

	// Счет на оплату
	Если Не ЗначениеЗаполнено(ПолученныеДанные.СчетНаОплатуПоставщика) И ЗначениеЗаполнено(ДанныеИБ.СчетНаОплатуПоставщика) Тогда
		ПолученныеДанные.СчетНаОплатуПоставщика = ДанныеИБ.СчетНаОплатуПоставщика;
	КонецЕсли;

	ОбнулениеСчетовУчетаРасчетовВДанныхИБ(ПолученныеДанные, ДанныеИБ);

	// Переносим те свойства, которые указаны в ПКС
	ЗаполнитьСвойстваШапкиОбъекта(КонвертацияСвойств, ПолученныеДанные, ДанныеИБ);

	// Переносим свойства, не указанные в ПКС
	ЗаполнитьЗначенияСвойств(ДанныеИБ, ПолученныеДанные, "НДСВключенВСтоимость");

	// Восстанавливаем "затертые" данные
	//Товары
	МассивКлючевыхПолей = Новый Массив;
	МассивКлючевыхПолей.Добавить("Номенклатура");
	МассивКлючевыхПолей.Добавить("ЕдиницаИзмерения");
	МассивКлючевыхПолей.Добавить("Количество");
	МассивКлючевыхПолей.Добавить("Сумма");
	МассивКлючевыхПолей.Добавить("СуммаВРознице");
	МассивКлючевыхПолей.Добавить("Цена");
	МассивКлючевыхПолей.Добавить("СтавкаНДС");
	МассивКлючевыхПолей.Добавить("СуммаНДС");
	МассивКлючевыхПолей.Добавить("НомерГТД");
	МассивКлючевыхПолей.Добавить("СтранаПроисхождения");
	МассивКлючевыхПолей.Добавить("ПрослеживаемыйТовар");

#Удаление
	ЗаполнитьТабличнуюЧастьОбъектаНачальнымиДанными(
	ПолученныеДанные.Товары,
	ДанныеИБ.Товары,
	МассивКлючевыхПолей,
	"Коэффициент,СчетУчета,СчетУчетаНДС, СчетРасчетов, ОтражениеВУСН, СпособУчетаНДС");
#КонецУдаления
#Вставка
	ЗаполнитьТабличнуюЧастьОбъектаНачальнымиДанными(
	ПолученныеДанные.Товары,
	ДанныеИБ.Товары,
	МассивКлючевыхПолей,
	"Коэффициент,ОтражениеВУСН, СпособУчетаНДС");
#КонецВставки

	ДанныеИБ.Товары.Загрузить(ПолученныеДанные.Товары.Выгрузить());

	ДанныеИБ.СведенияПрослеживаемости.Загрузить(ПолученныеДанные.СведенияПрослеживаемости.Выгрузить());

	//Услуги
	МассивКлючевыхПолей = Новый Массив;
	МассивКлючевыхПолей.Добавить("Номенклатура");
	МассивКлючевыхПолей.Добавить("Содержание");
	МассивКлючевыхПолей.Добавить("Количество");
	МассивКлючевыхПолей.Добавить("Сумма");
	МассивКлючевыхПолей.Добавить("Цена");
	МассивКлючевыхПолей.Добавить("СтавкаНДС");
	МассивКлючевыхПолей.Добавить("СуммаНДС");

	Если ДанныеИБ.Проведен Тогда
#Удаление
		ПоляДляЗаполнения = "СчетЗатрат,ПодразделениеЗатрат,СчетУчетаНДС, ОтражениеВУСН, СчетЗатратНУ,
		|Субконто1, Субконто2, Субконто3, СубконтоНУ1, СубконтоНУ2, СубконтоНУ3, СпособУчетаНДС";
#КонецУдаления
#Вставка
		ПоляДляЗаполнения = "Содержание,СчетУчетаНДС, ОтражениеВУСН, СпособУчетаНДС";
#КонецВставки
	Иначе
		ПоляДляЗаполнения = "СчетУчетаНДС, ОтражениеВУСН, СпособУчетаНДС";
	КонецЕсли;

	ЗаполнитьТабличнуюЧастьОбъектаНачальнымиДанными(
	ПолученныеДанные.Услуги,
	ДанныеИБ.Услуги,
	МассивКлючевыхПолей,
	ПоляДляЗаполнения);

	ДанныеИБ.Услуги.Загрузить(ПолученныеДанные.Услуги.Выгрузить());

	// Возвратная тара.
	МассивКлючевыхПолей = Новый Массив;
	МассивКлючевыхПолей.Добавить("Номенклатура");
	МассивКлючевыхПолей.Добавить("Количество");
	МассивКлючевыхПолей.Добавить("Сумма");
	МассивКлючевыхПолей.Добавить("Цена");

	ЗаполнитьТабличнуюЧастьОбъектаНачальнымиДанными(
	ПолученныеДанные.ВозвратнаяТара,
	ДанныеИБ.ВозвратнаяТара,
	МассивКлючевыхПолей,
	"СчетУчета");

	ДанныеИБ.ВозвратнаяТара.Загрузить(ПолученныеДанные.ВозвратнаяТара.Выгрузить());

	ДанныеИБ.ДополнительныеСвойства.Вставить("НДСПоСтавкам4и2", ПолученныеДанные.ДополнительныеСвойства.НДСПоСтавкам4и2);
	ДанныеИБ.ДополнительныеСвойства.Вставить("НДСПоСтавкам18и10", ПолученныеДанные.ДополнительныеСвойства.НДСПоСтавкам18и10);

	Если ПолученныеДанные.ДополнительныеСвойства.Свойство("Услуги") Тогда
		ДанныеИБ.ДополнительныеСвойства.Вставить("Услуги", ПолученныеДанные.ДополнительныеСвойства.Услуги);
	КонецЕсли;

	// Зачет авансов
	ДанныеИБ.ЗачетАвансов.Загрузить(ПолученныеДанные.ЗачетАвансов.Выгрузить());

	//Штрихкоды упаковок
	ДанныеИБ.ШтрихкодыУпаковок.Загрузить(ПолученныеДанные.ШтрихкодыУпаковок.Выгрузить());

	ПолученныеДанные = Неопределено;

	УстановитьОтменуПроведенияДляРучнойКорректировки(ДанныеИБ);

	#КонецОбласти
КонецПроцедуры
